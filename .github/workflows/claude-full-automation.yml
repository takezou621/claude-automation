name: Simple Claude Automation

on:
  schedule:
    - cron: '0 15 * * *'  # Daily at 15:00 UTC
  workflow_dispatch:
  push:
    branches:
      - 'feature/issue-*'
      - 'fix/issue-*'

jobs:
  auto-process:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ github.token }}
        
    - name: Process Issues
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: |
          console.log('ðŸ¤– Starting Claude automation...');
          
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'automation-ready'
          });
          
          if (issues.data.length === 0) {
            console.log('No automation-ready issues found');
            return;
          }
          
          for (const issue of issues.data) {
            console.log(`Processing issue #${issue.number}: ${issue.title}`);
            
            const branchName = `feature/issue-${issue.number}`;
            
            const branches = await github.rest.repos.listBranches({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const branch = branches.data.find(b => b.name === branchName);
            if (!branch) {
              console.log(`Branch ${branchName} not found, skipping...`);
              continue;
            }
            
            const existingPRs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${branchName}`,
              state: 'open'
            });
            
            let prNumber;
            if (existingPRs.data.length === 0) {
              const pr = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Fix: ${issue.title}`,
                head: branchName,
                base: 'main',
                body: `Resolves #${issue.number}\n\nðŸ¤– Auto-generated by Claude automation`
              });
              prNumber = pr.data.number;
              console.log(`Created PR #${prNumber}`);
            } else {
              prNumber = existingPRs.data[0].number;
            }
            
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                merge_method: 'squash'
              });
              
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: 'âœ… Automatically resolved by Claude automation'
              });
              
              console.log(`Completed issue #${issue.number}`);
              
            } catch (error) {
              console.log(`Failed to merge PR #${prNumber}: ${error.message}`);
            }
          }
          
          console.log('âœ… Automation complete')