{
  "permissions": {
    "allow": [
      "WebFetch(domain:github.com)",
      "Bash(rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(gh auth:*)",
      "Bash(gh issue create:*)",
      "Bash(gh run view:*)",
      "Bash(chmod:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(yamllint:*)",
      "Bash(python3:*)",
      "Bash(bash:*)",
      "Bash(grep:*)",
      "Bash(git checkout:*)",
      "Bash(gh pr create:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(TZ='Asia/Tokyo' date)",
      "Bash(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M:%S %Z')",
      "Bash(node:*)",
      "Bash(echo:*)",
      "WebFetch(domain:api.github.com)",
      "Bash(git rebase:*)",
      "Bash(git cherry-pick:*)",
      "Bash(git stash:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh pr review:*)",
      "Bash(gh pr comment:*)",
      "Bash(gh pr merge:*)",
      "Bash(gh pr show:*)",
      "Bash(npm test)",
      "Bash(npm install)",
      "Bash(npm test:*)",
      "Bash(npm run lint)",
      "Bash(npm run lint:*)",
      "Bash(docker:*)",
      "Bash(npm run docker:build:*)",
      "Bash(npm run cli:*)",
      "Bash(gh pr edit:*)",
      "Bash(gh pr view:*)",
      "Bash(git fetch:*)",
      "Bash(gh issue list:*)",
      "Bash(git pull:*)",
      "Bash(git merge:*)",
      "Bash(git branch:*)",
      "Bash(curl:*)",
      "Bash(mkdir:*)",
      "Bash(gh run list:*)",
      "Bash(yaml-validator:*)",
      "Bash(gh:*)",
      "Bash(git remote get-url:*)",
      "Bash(pip install:*)",
      "Bash(npm install:*)",
      "Bash(gh issue:*)",
      "Bash(diff:*)",
      "Bash(npm run:*)",
      "Bash(GITHUB_TOKEN=test npm run automation:health)",
      "Bash(GITHUB_TOKEN=test CLAUDE_API_KEY=test npm run automation:health)",
      "Bash(GITHUB_TOKEN=test CLAUDE_API_KEY=test GITHUB_OWNER=test GITHUB_REPO=test npm run automation:health)",
      "Bash(GITHUB_TOKEN=test CLAUDE_API_KEY=test GITHUB_OWNER=test GITHUB_REPO=test npm run automation:stats)",
      "Bash(npx:*)",
      "Bash(for f in .github/workflows/*.yml)",
      "Bash(do echo \"=== Checking $f ===\")",
      "Bash(done)",
      "Bash(claude-code --version)",
      "Bash(ruby:*)",
      "Bash(unzip:*)",
      "Bash(sed:*)",
      "Bash(git remote set-url:*)",
      "Bash(python:*)",
      "Bash(pip3 install:*)",
      "Bash(git reset:*)"
    ],
    "deny": []
  }
}